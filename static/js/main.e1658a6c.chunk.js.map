{"version":3,"sources":["components/Table.js","App.js","index.js"],"names":["Table","App","props","state","error","isLoaded","items","fetch","then","response","json","result","setState","data","memes","console","log","this","message","map","myMemes","name","id","React","Component","ReactDOM","render","document","getElementById"],"mappings":"yMAeeA,ICqDAC,E,kDAhEb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,MAAO,KACPC,UAAU,EACVC,MAAO,IALQ,E,qDASnB,WAAqB,IAAD,OAClBC,MAAM,qCACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MACC,SAACG,GACC,EAAKC,SAAS,CACZP,UAAU,EACVC,MAAOK,EAAOE,KAAKC,QAEnBC,QAAQC,IAAI,QAAQ,EAAKb,MAAMG,UAEnC,SAACF,GACC,EAAKQ,SAAS,CACZP,UAAU,EACVD,e,oBAMV,WAAU,IACR,EAAmCa,KAAKd,MAAhCC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SAAUC,EAAzB,EAAyBA,MA8BzB,OAAIF,EA3BK,0CAAaA,EAAMc,WA4BpBb,EAnBH,8BACEC,EAAMa,KAAI,SAAAC,GAAO,OAChB,6BAEGA,EAAQC,MADJD,EAAQE,SARd,iD,GAtCKC,IAAMC,WCAxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e1658a6c.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nfunction Table(props) {\r\n\r\n\t\r\n  console.log(\"passing props\",props)\r\n  \treturn (\r\n  \t\t <div>\r\n       <h1> {props.results}  </h1>\r\n        \r\n  \t\t </div>\r\n  \t\t)\r\n  \r\n}\r\n\r\nexport default Table","import React from \"react\"\r\nimport Table from \"./components/Table\"\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      items: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://api.imgflip.com/get_memes\")\r\n      .then(response => response.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            items: result.data.memes,\r\n          });\r\n            console.log(\"items\",this.state.items)\r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error,\r\n          });\r\n        }\r\n   )\r\n  }\r\n\r\n  render() {\r\n    const { error, isLoaded, items } = this.state;\r\n\r\n    const containsErrorMessage = () => {\r\n      return <div>Error: {error.message}</div>;\r\n    };\r\n\r\n    const isLoading = () => {\r\n      return <div>Loading...</div>;\r\n    };\r\n    \r\n    function results()  {\r\n      return (\r\n         <div>\r\n          {items.map(myMemes => (\r\n            <h1 \r\n              key={myMemes.id}>\r\n              {myMemes.name}\r\n           </h1>   \r\n          ))}    \r\n        </div>\r\n      )\r\n    }\r\n    const showMe = () =>{\r\n      return (\r\n        <div>\r\n           <Table results={this.results}  />\r\n        </div>\r\n          )\r\n    }\r\n\r\n    if (error) return containsErrorMessage();\r\n    return !isLoaded ? isLoading() : results();\r\n  }\r\n}\r\nexport default App","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport App from \"./App\"\r\nReactDOM.render(<App />, document.getElementById(\"root\")) "],"sourceRoot":""}